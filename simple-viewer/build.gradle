/*
 * Copyright (c) 2020. Morgan Lewis <https://github.com/MESLewis>
 * This file is part of the SimpleGLTF2 project which is released under the MIT License.
 * See <https://github.com/MESLewis/SimpleGLTF2/blob/master/LICENSE> for more information
 */

plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

import org.gradle.internal.os.OperatingSystem

project.ext.lwjglVersion = "3.2.3"
project.ext.jomlVersion = "1.9.20"

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        project.ext.lwjglNatives = "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = "natives-windows"
        break
}

group 'com.meslewis'
version '1.0'

sourceCompatibility = 13
targetCompatibility = 13

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':core')
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    implementation  group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.1'
    implementation  group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    implementation  group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.28'
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-nuklear"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-stb"
    implementation "org.joml:joml:${jomlVersion}"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nuklear::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.5.2'
}

application {
    mainClassName = 'com.meslewis.simplegltf2.simpleviewer.SimpleViewer'
}
//Enable lwjglx-debug agent debugger
applicationDefaultJvmArgs = [
        '-Djava.util.logging.config.file=' + project.projectDir.path + '\\logger.properties ',
        '-javaagent:' + project.projectDir.path + '\\src\\main\\resources\\lwjglx-debug-1.0.0.jar']

run {
    enableAssertions = true
}

def sharedManifest = manifest {
    attributes "Main-Class": "com.meslewis.simplegltf2.simpleviewer.SimpleViewer"
}

jar {
    manifest = project.manifest {
        from sharedManifest
    }
}

//task buildExecutableJar(type:Jar) {
//    archivesBaseName = "packed"
//    dependsOn configurations.runtimeClasspath
//    from {
//        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
//    }
//
//    manifest = project.manifest {
//        from sharedManifest
//    }
//}

//task runJar(dependsOn:Jar) {
//    javaexec {
//        args ["-jar", jar.archiveFile.get().toString()]
//    }
//}

runShadow {
    args 'C:\\Users\\MESLe\\Documents\\Programming\\SimpleGLTF2\\sample-models\\glTF-Sample-Models\\2.0\\RiggedSimple\\glTF\\RiggedSimple.gltf'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
